// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Description for gpg",
    "title": "gpg",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "Unknown"
      ],
      "container": "direktiv/gpg",
      "issues": null,
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This is a longer description for the application gpg",
      "maintainer": null,
      "url": null
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "commands": {
                  "description": "Array of commands.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command to run",
                        "type": "string",
                        "example": "gpg --list-keys"
                      },
                      "continue": {
                        "description": "Stops excecution if command fails, otherwise proceeds with next command",
                        "type": "boolean"
                      },
                      "print": {
                        "description": "If set to false the command will not print the full command with arguments to logs.",
                        "type": "boolean",
                        "default": true
                      },
                      "silent": {
                        "description": "If set to false the command will not print output to logs.",
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                },
                "files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/direktivFile"
                  }
                },
                "private": {
                  "description": "Base64-encoded private GPG key. If not set ` + "`" + `private.key` + "`" + ` file will be used.",
                  "type": "string"
                },
                "public": {
                  "description": "Base64-encoded public GPG key. If not set ` + "`" + `public.key` + "`" + ` file will be used.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "nice greeting",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "continue": false,
              "exec": "/bin/runner"
            },
            {
              "action": "exec",
              "exec": "{{- if (empty .Public) }}\necho \"no public key in request\"\n{{- else }}\nbash -c 'echo {{ .Public }} | base64 --decode \u003e public.key'\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "{{- if (empty .Private) }}\necho \"no private key in request\"\n{{- else }}\nbash -c 'echo {{ .Private }} | base64 --decode \u003e private.key'\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "gpg --batch --import private.key"
            },
            {
              "action": "exec",
              "continue": false,
              "exec": "gpg --batch --import public.key"
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "env": [
                "ENV GPG_TTY=/dev/console"
              ],
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"gpg\": {{ index . 5 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: gpg",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: gpg\n    image: direktiv/gpg:1.0\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Description for gpg",
    "title": "gpg",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "Unknown"
      ],
      "container": "direktiv/gpg",
      "issues": null,
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "This is a longer description for the application gpg",
      "maintainer": null,
      "url": null
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "commands": {
                  "description": "Array of commands.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CommandsItems0"
                  }
                },
                "files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/direktivFile"
                  }
                },
                "private": {
                  "description": "Base64-encoded private GPG key. If not set ` + "`" + `private.key` + "`" + ` file will be used.",
                  "type": "string"
                },
                "public": {
                  "description": "Base64-encoded public GPG key. If not set ` + "`" + `public.key` + "`" + ` file will be used.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "nice greeting",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "example": {
                "greeting": "Hello YourName"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "continue": false,
              "exec": "/bin/runner"
            },
            {
              "action": "exec",
              "exec": "{{- if (empty .Public) }}\necho \"no public key in request\"\n{{- else }}\nbash -c 'echo {{ .Public }} | base64 --decode \u003e public.key'\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "{{- if (empty .Private) }}\necho \"no private key in request\"\n{{- else }}\nbash -c 'echo {{ .Private }} | base64 --decode \u003e private.key'\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "gpg --batch --import private.key"
            },
            {
              "action": "exec",
              "continue": false,
              "exec": "gpg --batch --import public.key"
            },
            {
              "action": "foreach",
              "continue": "{{ .Item.Continue }}",
              "env": [
                "ENV GPG_TTY=/dev/console"
              ],
              "exec": "{{ .Item.Command }}",
              "loop": ".Commands",
              "print": "{{ .Item.Print }}",
              "silent": "{{ .Item.Silent }}"
            }
          ],
          "output": "{\n  \"gpg\": {{ index . 5 | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: req\n     type: action\n     action:\n       function: gpg",
            "title": "Basic"
          }
        ],
        "x-direktiv-function": "functions:\n  - id: gpg\n    image: direktiv/gpg:1.0\n    type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "CommandsItems0": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command to run",
          "type": "string",
          "example": "gpg --list-keys"
        },
        "continue": {
          "description": "Stops excecution if command fails, otherwise proceeds with next command",
          "type": "boolean"
        },
        "print": {
          "description": "If set to false the command will not print the full command with arguments to logs.",
          "type": "boolean",
          "default": true
        },
        "silent": {
          "description": "If set to false the command will not print output to logs.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
}
